buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven { url 'https://software.r3.com/artifactory/corda-releases' }
        gradlePluginPortal()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.4.20"
        classpath 'gradle.plugin.com.github.jengelman.gradle.plugins:shadow:7.0.0'
    }
}

apply plugin: 'kotlin'
apply plugin: 'com.github.johnrengelman.shadow'

jar {
    manifest {
        attributes 'Main-Class': 'com.template.webserver.ServerKt'
    }
}

repositories {
    mavenLocal()
    jcenter()
    mavenCentral()
    maven { url 'https://jitpack.io' }
    maven { url 'https://software.r3.com/artifactory/corda-releases' }
    maven { url 'https://software.r3.com/artifactory/corda' }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib"
    compile "io.github.config4k:config4k:0.4.2"
    compile 'com.xenomachina:kotlin-argparser:2.0.7'
    compile "org.litote.kmongo:kmongo:4.2.3"
    compile "me.tongfei:progressbar:0.9.0"
    compile "ch.qos.logback:logback-classic:1.2.3"
    compile "com.github.kwebio:core:0.8.5"
    compile "org.jetbrains.kotlinx:kotlinx-coroutines-core-jvm:1.4.2"
    compile "io.ktor:ktor-auth:1.4.3"
    compile "io.ktor:ktor-server-sessions:1.4.3"
    compile "io.ktor:ktor-client-cio:1.4.3"
    compile "net.corda:corda-rpc:4.8"
    compile "com.formula:contracts:1.0"
    compile "com.formula:workflows:1.0"
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile) {
    kotlinOptions {
        languageVersion = "1.4"
        apiVersion = "1.4"
        jvmTarget = "1.8"
        javaParameters = true   // Useful for reflection.
    }
}

task buildDependencies(type:Exec) {
    workingDir "${rootProject.projectDir}/.."
    commandLine './gradlew', 'clean', 'build', 'publishToMavenLocal'
}

shadowJar {
    configurations = [project.configurations.compile]
    archiveFileName = "formula-backend.jar"
}

/* This task will start the springboot server that connects to your node (via RPC connection). All of the http requests
 * are in the Controller file. You can leave the Server.kt and NodeRPCConnection.kt file untouched for your use.
 */
task runPlayer2(type: JavaExec, dependsOn: assemble) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'com.formula.player.PlayerKt'
    args '--address=localhost:10052', '--user=user1', '--secret=test', '--port=8050'
}

task runPlayer1(type: JavaExec, dependsOn: assemble) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'com.formula.player.PlayerKt'
    args '--address=localhost:10042', '--user=user1', '--secret=test', '--port=8040'
}

task runHouse2(type: JavaExec, dependsOn: assemble) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'com.formula.house.HouseKt'
    args '--address=localhost:10032', '--user=user1', '--secret=test', '--port=8030'
}

task runHouse1(type: JavaExec, dependsOn: assemble) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'com.formula.house.HouseKt'
    args '--address=localhost:10022', '--user=user1', '--secret=test', '--port=8020'
}

task runGov(type: JavaExec, dependsOn: assemble) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'com.formula.governor.GovernorKt'
    args '--address=localhost:10012', '--user=user1', '--secret=test', '--port=8010'
}

tasks.named("shadowJar") { dependsOn(tasks.named("buildDependencies")) }
tasks.named("build") { dependsOn(tasks.named("shadowJar")) }